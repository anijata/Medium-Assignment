@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}

@{
    ViewBag.Title = "Index";
}

<h2>Employees</h2>

<p>

    @Html.ActionLink("New Employee", "New", "Employees", null, new { @class = "btn btn-primary" })

</p>


<table id="table" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">User Name</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Email</th>
            <th scope="col">Gender</th>
            <th scope="col">Designation</th>
            <th scope="col">Department</th>
            <th scope="col">EmployeeType</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>

        </tr>
    </thead>
    <tbody>
    </tbody>
</table>



@section Scripts {

    <script>

        function getEmployees() {
            return $.ajax({
                    type: "get",
                    url: "https://localhost:44357/api/employees/",
                    datatype: "json",
                    traditional: "true",
                    headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                    error: errorHandler




                });

        }

        function populateTable(table, employees) {
            for (let i = 0; i < employees.length; i++) {
                var emp = employees[i];


                table.row.add([
                    emp.FirstName + " " + emp.LastName,
                    emp.UserName,
                    emp.PhoneNumber,
                    emp.Email,
                    emp.Gender,
                    emp.Designation,
                    emp.Department,
                    emp.EmployeeType,
                    emp.Status,
                    tableButtons(emp.Id)
                ]);

                
            }

            table.draw();

        }

        function deleteRequest(id) {
        return $.ajax({
            type: "DELETE",
            url: "https://localhost:44357/api/employees/" + id,
            datatype: "json",
            traditional: "true",
            headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

            error: errorHandler

        });

    }

        function buttonHandlers() {
            $('.edit').click(function () {
                window.location.href = "https://localhost:44335/Employees/edit/" + $(this).val();
            });

            $('.details').click(function () {
                window.location.href = "https://localhost:44335/Employees/details/" + $(this).val();
            });

            $('.delete').click(function () {
                let id = $(this).val();
                bootbox.confirm("Are you sure you want to delete this employee record?", function (result) {
                    if (result) {
                        deleteRequest(id).done(() => { window.location.reload(); });
                    }
                });
            });
        }


        $(document).ready(function () {
            let table = $("#table").DataTable({
                columnDefs: [
                    { width: 200, targets: 9 }
                ]});
            getEmployees()
                .done((data) => { populateTable(table, data.Employees); })
                .done(buttonHandlers);

        });


    </script>

}



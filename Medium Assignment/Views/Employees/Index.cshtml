@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}

@{
    ViewBag.Title = "Index";
}

<h2>Employees</h2>

<p>

    @Html.ActionLink("New Employee", "New", "Employees", new { @class = "btn btn-primary" })

</p>


<table id="table" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">User Name</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Email</th>
            <th scope="col">Date of Birth</th>
            <th scope="col">Gender</th>
            <th scope="col">Designation</th>
            <th scope="col">Date of Joining</th>
            <th scope="col">Department</th>
            <th scope="col">Address</th>
            <th scope="col">Country</th>
            <th scope="col">State</th>
            <th scope="col">City</th>
            <th scope="col">EmployeeType</th>
            <th scope="col">Status</th>

        </tr>
    </thead>
    <tbody>
    </tbody>
</table>



@section Scripts {

    <script>

        function getEmployees() {
        return $.ajax({
                type: "get",
                url: "https://localhost:44357/api/employees/",
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                error: function (jqXHR, status, err) {
                    alert(jqXHR.responseJSON.ModelState[""]);
                    debugger;
                    console.log(jqXHR.responseJSON);
                    console.log(jqXHR);
                    console.log(status);
                    console.log(err);
                    alert("Error getting data.");
                }




            });

    }

    function populateTable(employees) {
        for (let i = 0; i < employees.length; i++) {
            var element = "<tr>";
            var emp = employees[i];

            element += "<td>" + emp.FirstName + " " + emp.LastName + "</td>";
            element += "<td>" + emp.UserName + "</td>";
            element += "<td>" + emp.PhoneNumber + "</td>";
            element += "<td>" + emp.Email + "</td>";
            element += "<td>" + emp.DOB + "</td>";
            element += "<td>" + emp.Gender + "</td>";
            element += "<td>" + emp.Designation + "</td>";
            element += "<td>" + emp.DOJ + "</td>";
            element += "<td>" + emp.Department + "</td>";

            if (emp.Address2) {
                element += "<td>" + emp.Address1 + ", " + emp.Address2 + "</td>";
            } else {
                element += "<td>" + emp.Address1 + "</td>";
            }

            element += "<td>" + emp.Country + "</td>";
            element += "<td>" + emp.State + "</td>";
            element += "<td>" + emp.City + "</td>";
            element += "<td>" + emp.EmployeeType + "</td>";
            element += "<td>" + emp.Status + "</td>";

            element += "</tr>";

            $('#table > tbody').append(element);
         }

    }


    $(document).ready(function () {

        getEmployees()
            .done((data) => { populateTable(data.Employees); })
            .done(() => { $("#table").DataTable(); });

        $(".delete").click(function (event) {
            if (!confirm("Are you sure you want to delete this employee?")) {
                event.preventDefault()
            }

        });
    });


    </script>

}



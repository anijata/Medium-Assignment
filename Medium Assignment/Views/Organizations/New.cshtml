@model Medium_Assignment.Models.OrganizationNewViewModel

@{
    ViewBag.Title = "New";
}

<h2>Create Organization</h2>


@using (@Html.BeginForm("New", "Organizations", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber)
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.PhoneNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Email)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.UserName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.PasswordFor(m => m.Password, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Password)
    </div>



    <div class="form-group">
        @Html.LabelFor(m => m.Address1)
        @Html.TextBoxFor(m => m.Address1, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Address1)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Address2)
        @Html.TextBoxFor(m => m.Address2, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Address2)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CountryId)
        @Html.DropDownListFor(m => m.CountryId, new List<SelectListItem>(), "Select Country", new { @class = "form-control text-danger", id = "Countries", })
        @Html.ValidationMessageFor(m => m.CountryId)

    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.StateId)
        @Html.DropDownListFor(m => m.StateId, new List<SelectListItem>(), "Select State", new { @class = "form-control text-danger", id = "States" })
        @Html.ValidationMessageFor(m => m.StateId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CityId)
        @Html.DropDownListFor(m => m.CityId, new List<SelectListItem>(), "Select City", new { @class = "form-control text-danger", id = "Cities" })
        @Html.ValidationMessageFor(m => m.CityId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Status)
    </div>

    <div class="form-group">
        @Html.RadioButtonFor(m => m.Status, "Active") Active
        @Html.RadioButtonFor(m => m.Status, "Inactive") Inactive
    </div>

    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Status)

    </div>



    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Description)
    </div>

    <button type="submit" class="btn btn-primary">
        Save
    </button>


}

@section Scripts {

    <script>
        $(document).ready(function () {

            $("#Countries").empty();
            $("#Countries").append("<option value=0> Select Country </option>");

            $.ajax({
                type: "get",
                url: "https://localhost:44357/api/resources/countries",
                datatype: "json",
                traditional: "true",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $("#Countries").append("<option value=" + data[i].Id + ">" + data[i].Name + "</option>");

                    }
                },

                error: function (jqXHR, status, err) {
                    debugger;
                    console.log(jqXHR);
                    console.log(status);
                    console.log(err);
                }

                


             });

        });


    </script>

    <script>
        $(document).ready(function () {
            $("#Countries").change(function () {
                $("#States").empty();
                $("#States").append("<option value=0> Select State </option>");
                $("#Cities").empty();
                $("#Cities").append("<option value=0> Select City </option>");


                if ($("#Countries").val() == 0) {

                    return;
                }

                $.ajax({
                    type: "get",
                    url: "https://localhost:44357/api/resources/states/" + $("#Countries").val(),
                    datatype: "json",
                    traditional: "true",
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            $("#States").append("<option value=" + data[i].Id + ">" + data[i].Name + "</option>");

                        }
                    }


                });


            });



        });


    </script>

    <script>
        $(document).ready(function () {
            $("#States").change(function () {
                $("#Cities").empty();
                $("#Cities").append("<option value=0> Select City </option>");
                if ($("#States").val() == "0") {

                    return;
                }

                $.ajax({
                    type: "get",
                    url: "https://localhost:44357/api/resources/cities/" + $("#States").val(),
                    datatype: "json",
                    traditional: "true",
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            $("#Cities").append("<option value=" + data[i].Id + ">" + data[i].Name + "</option>");

                        }
                    }


                });


            });



        });


    </script>

}




@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}

@{
    ViewBag.Title = "Index";
}

<h2>Organizations</h2>

<p>
    @Html.ActionLink("New Organization", "New", "Organizations", null, new { @class = "btn btn-primary" })
</p>


<table id="table" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Email</th>
            <th scope="col">User Name</th>
            <th scope="col">Address</th>
            <th scope="col">Country</th>
            <th scope="col">State</th>
            <th scope="col">City</th>
            <th scope="col">Status</th>
            <th scope="col">Description</th>
            <th scope="col">Actions</th>

        </tr>


    </thead>

    <tbody>
    </tbody>
</table>

@section Scripts {
    <script>


        function getOrganizations() {
        return $.ajax({
                type: "get",
                url: "https://localhost:44357/api/organizations/",
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                error: function (jqXHR, status, err) {
                    alert(jqXHR.responseJSON.ModelState[""]);

                    console.log(jqXHR.responseJSON);
                    console.log(jqXHR);
                    console.log(status);
                    console.log(err);
                    alert("Error getting data.");
                }




            });

    }

        //function populateTable(organizations) {

        //        for (let i = 0; i < organizations.length; i++) {
        //            var element = "<tr>";

        //            var org = organizations[i];
        //            element += "<td>" + org.Name + "</td>";
        //            element += "<td>" + org.PhoneNumber + "</td>";
        //            element += "<td>" + org.Email + "</td>";
        //            element += "<td>" + org.UserName + "</td>";

        //            if (org.Address2) {
        //                element += "<td>" + org.Address1 + ", " + org.Address2 + "</td>";
        //            } else {
        //                element += "<td>" + org.Address1 + "</td>";
        //            }

        //            element += "<td>" + org.Country + "</td>";
        //            element += "<td>" + org.State + "</td>";
        //            element += "<td>" + org.City + "</td>";
        //            element += "<td>" + org.Status + "</td>";
        //            element += "<td>" + org.Description + "</td>";
        //            element += "<td>"
        //            element += "<a href= \"/Organizations/Details/" + org.Id + "\" class=\"btn btn-primary\" style=\"margin: 2px 2px 2px 2px;\" >Details </a>";
        //            element += "<a href= \"/Organizations/Edit/" + org.Id + "\" class=\"btn btn-primary\" style=\"margin: 2px 2px 2px 2px;\"> Edit </a>";
        //            element += "<button class= \"btn btn-primary delete\" value= \"" + org.Id + "\"> Delete</button>";
        //            element += "</td>"

        //            element += "</tr>";

        //            $('#table > tbody').append(element);
        //        }

        //}

        
         

        function populateTable(table, organizations) {
            for (let i = 0; i < organizations.length; i++) {
                var org = organizations[i];

                table.row.add([org.Name,
                    org.PhoneNumber,
                    org.Email,
                    org.UserName,
                    org.Address1 + " " + org.Address2,
                    org.Country,
                    org.State,
                    org.City,
                    org.Status,
                    org.Description,
                    tableButtons(org.Id)]);
            }

            
            table.draw();
        }

        function deleteRequest(id) {
            return $.ajax({
                type: "DELETE",
                url: "https://localhost:44357/api/organizations/" + id,
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                error: function (jqXHR, status, err) {
                    alert(jqXHR.responseJSON.ModelState[""]);

                    console.log(jqXHR.responseJSON);
                    console.log(jqXHR);
                    console.log(status);
                    console.log(err);
                    alert("Error getting data.");
                }

            });

        }

        function buttonHandlers() {
            $('.edit').click(function () {
                window.location.href = "https://localhost:44335/Organizations/edit/" + $(this).val();
            });

            $('.details').click(function () {
                window.location.href = "https://localhost:44335/Organizations/details/" + $(this).val();
            });

            $('.delete').click(function () {
                if (confirm("Are you sure you want to delete this organization record?")) {
                    deleteRequest($(this).val()).done(() => { window.location.reload(); });
                }
            });
        }

        $(document).ready(function () {
            let table = $("#table").DataTable();

            getOrganizations()
                .done((data) => { populateTable(table, data.Organizations);})
                .done(buttonHandlers);
        });
    </script>

}


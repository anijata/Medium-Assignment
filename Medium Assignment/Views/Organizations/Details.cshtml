@using Medium_Assignment.Models

@model Medium_Assignment.Models.OrganizationDetailsViewModel



@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}


@{
    ViewBag.Title = "Details";
}

<style>

    .left {
        float: left;
        width: 50%;
    }

    .right {
        float: right;
        width: 50%;
    }
</style>

<h2>Details</h2>


<form>

    @Html.HiddenFor(m => m.Id, new { id = "Id" })

    <div class="left">
        <div class="form-group">
            @Html.DisplayNameFor(model => model.Name)
            @Html.TextBoxFor(m => Model.Name, new { @class = "form-control", id = "Name", @disabled = "disabled" })
        </div>




        <div class="form-group">

            @Html.DisplayNameFor(model => model.UserName)
            @Html.TextBoxFor(m => Model.UserName, new { @class = "form-control", id = "UserName", @disabled = "disabled" })
        </div>

        <div class="form-group">

            @Html.DisplayNameFor(model => model.Email)
            @Html.TextBoxFor(m => Model.Email, new { @class = "form-control", id = "Email", @disabled = "disabled" })
        </div>

        <div class="form-group">

            @Html.DisplayNameFor(model => model.PhoneNumber)
            @Html.TextBoxFor(m => Model.PhoneNumber, new { @class = "form-control", id = "PhoneNumber", @disabled = "disabled" })
        </div>


        <div class="form-group">

            @Html.DisplayNameFor(model => model.Country)
            @Html.TextBoxFor(m => Model.Country, new { @class = "form-control", id = "Country", @disabled = "disabled" })
        </div>
    </div>

    <div class="right">

        <div class="form-group">

            @Html.DisplayNameFor(model => model.State)
            @Html.TextBoxFor(m => Model.State, new { @class = "form-control", id = "State", @disabled = "disabled" })
        </div>


        <div class="form-group">

            @Html.DisplayNameFor(model => model.City)
            @Html.TextBoxFor(m => Model.City, new { @class = "form-control", id = "City", @disabled = "disabled" })
        </div>

        <div class="form-group">
            @Html.DisplayNameFor(model => model.Address)
            @Html.TextBoxFor(m => Model.Address, new { @class = "form-control", id = "Address", @disabled = "disabled" })
        </div>


        <div class="form-group">
            @Html.DisplayNameFor(model => model.Status)
            @Html.TextBoxFor(m => Model.Status, new { @class = "form-control", id = "Status", @disabled = "disabled" })
        </div>


        <div class="form-group">
            @Html.DisplayNameFor(model => model.Description)
            @Html.TextBoxFor(m => Model.Description, new { @class = "form-control", id = "Description", @disabled = "disabled" })
        </div>
    </div>

    



</form>

    @section Scripts {

        <script>

            function OrganizationDetailsModel() {
                this.Name = "";
                this.PhoneNumber = 0;
                this.Email = "";
                this.UserName = "";
                this.Address = "";
                this.Country = 0;
                this.State = 0;
                this.City = 0;
                this.Status = "";
                this.Description = "";
            }

            function populateForm(model) {
                getFormData(model)
                    .done((data) => {
                        populateModel(model, data);
                        populateFields(model);
                    });
                

            }
            
            function populateModel(model, data) {
                model.Name = data.Name;
                model.PhoneNumber = data.PhoneNumber;
                model.Email = data.Email;
                model.UserName = data.UserName;
                if (data.Address2) {
                    model.Address = data.Address1 + ", " + data.Address2;
                } else {
                    model.Address = data.Address1;
                }

                model.Country = data.Country;
                model.State = data.State;
                model.City = data.City;
                model.Status = data.Status;
                model.Description = data.Description;

            }

            function populateFields(model) {
                $("#Name").val(model.Name);
                $("#PhoneNumber").val(model.PhoneNumber);
                $("#Email").val(model.Email);
                $("#UserName").val(model.UserName);
                $("#Address").val(model.Address);
                $("#Country").val(model.Country);
                $("#State").val(model.State);
                $("#City").val(model.City);
                $("#Status").val(model.Status);
                $("#Description").val(model.Description);

            }

            function getFormData(model) {
                let url = "https://localhost:44357/api/organizations/" + $("#Id").val();
                return ajaxRequest("GET", [], url);
            }

            $(document).ready(function () {
                let model = new OrganizationDetailsModel();
                populateForm(model);

            });


        </script>

    }

@model Medium_Assignment.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}


<style>

    .field-validation-error {
        color: #a94442;
        background-color: #cdeefd;
    }
</style>

<h2>@ViewBag.Title.</h2>

<form id="form">
    @Html.AntiForgeryToken()
    <h4>Change Password Form</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", id = "OldPassword" })
        @Html.ValidationMessageFor(m => m.OldPassword)

    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", id = "NewPassword" })
        @Html.ValidationMessageFor(m => m.NewPassword)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "ConfirmPassword" })
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input value="Change password" id="submit" class="btn btn-primary" />
        </div>
    </div>

</form>

@*@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
*@

@section Scripts {
    <script>


        function errorHandler(jqXHR, status, err) {
            switch (jqXHR.status) {
                case 401:
                    window.location.href = "https://localhost:44335/error/NotAuthorized";
                    break;
                case 404:
                    window.location.href = "https://localhost:44335/error/NotFound";
                    break;
                case 500:
                    window.location.href = "https://localhost:44335/error/InternalServerError";
                    break;
                default:
                    alert(jqXHR.responseJSON.Message);
                    break;
            }

        }

        function ChangePasswordModel() {
            this.OldPassword = "";
            this.NewPassword = "";
            this.ConfirmPassword = "";
        }

        function submitForm() {
            $("#form").validate({
                debug: true
            });



            if (!$("#form").valid()) {
                return;
            }

            var model = new ChangePasswordModel();

            model.OldPassword = $("#OldPassword").val();
            model.NewPassword = $("#NewPassword").val();
            model.ConfirmPassword = $("#ConfirmPassword").val();

            $.ajax({
                type: "post",
                url: "https://localhost:44357/api/Account/ChangePassword",
                data: model,
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},
                success: function (data) {
                    alert("Posted.");
                    window.location.href = "https://localhost:44335/Account/ChangePasswordConfirmation/";

                },

                error: errorHandler

            });

        }

        function addValidations() {
            var pwregex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).{6,}$");

            jQuery.validator.addMethod("password",
                function (value, element) {
                    return pwregex.test(value);
                }
                , "Passwords must be at least 6 characters.Passwords must have at least one non letter or digit character.Passwords must have at least one digit ('0'-'9').Passwords must have at least one uppercase ('A'-'Z').");


            $("#form").rules({
                Password: {
                    password: true
                }
            });

        }

        $(document).ready(function () {
            addValidations();

            $("#submit").click(submitForm);
        });
    </script>
}
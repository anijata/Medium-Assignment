@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}

@{
    ViewBag.Title = "Index";
}

<h2>Reviews</h2>

<p>
    @Html.ActionLink("New Review", "New", "Reviews", null, new { @class = "btn btn-primary" })
</p>

<table id="table" class="table table-bordered table-hover">

    <thead>
        <tr>
            <th>
                Review Id
            </th>

            <th>
                Agenda
            </th>

            <th>
                Reviewer
            </th>

            <th>
                Employee
            </th>

            <th>
                Status
            </th>


            <th>
                Actions
            </th>

        </tr>
    </thead>


    <tbody>
    </tbody>


</table>

@section Scripts {
    <script>

        function getReviews() {
            return $.ajax({
                    type: "get",
                    url: "https://localhost:44357/api/reviews/",
                    datatype: "json",
                    traditional: "true",
                    headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                    error: errorHandler




                });

        }


        function populateTable(table, reviews) {
            for (let i = 0; i < reviews.length; i++) {
                var rev = reviews[i];

                if (!rev.Reviewer) {
                    rev.Reviewer = "Unassigned";

                }

                if (!rev.Employee) {
                    rev.Employee = "Unassigned";
                }

                let buttons = "";

                if (rev.ReviewStatus == "New") {

                    buttons += "<a href= \"/Reviews/Assign/" + rev.Id + "\" class=\"btn btn-primary\" style=\"margin: 2px 2px 2px 2px;\" >Assign </a>";

                    
                }

                buttons += "<a href= \"/Reviews/Details/" + rev.Id + "\" class=\"btn btn-primary\" style=\"margin: 2px 2px 2px 2px;\" >Details </a>";

                buttons += "<a href= \"/Reviews/Edit/" + rev.Id + "\" class=\"btn btn-success\" style=\"margin: 2px 2px 2px 2px;\" >Edit </a>";
                buttons += "<button class= \"btn btn-danger delete\" value= \"" + rev.Id + "\"> Delete</button>";

                table.row.add([rev.Id,
                    rev.Agenda,
                    rev.Reviewer,
                    rev.Employee,
                    rev.ReviewStatus,
                    buttons]);
                

            }

            table.draw();

        }

        function deleteRequest(id) {
            return $.ajax({
                type: "DELETE",
                url: "https://localhost:44357/api/reviews/" + id,
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                error: errorHandler

            });

        }

        function buttonHandlers() {
            $('.delete').click(function () {
                if (confirm("Are you sure you want to delete this employee record?")) {
                    deleteRequest($(this).val()).done(() => { window.location.reload(); });
                }
            });
        }



        $(document).ready(function () {
            let table = $("#table").DataTable();
            getReviews()
                .done((data) => { populateTable(table, data.Reviews);})
                .done(buttonHandlers);
        });
    </script>

}

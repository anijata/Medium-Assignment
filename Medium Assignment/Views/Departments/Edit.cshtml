@model Medium_Assignment.Models.DepartmentEditViewModel

@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}

<style>

    .field-validation-error {
        color: #a94442;
        background-color: #cdeefd;
    }
</style>

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.Id, new { id = "Id"})

<form id="form">

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

</form>

<button type="submit" id="submit" class="btn btn-primary">
    Save
</button>

@section Scripts {
    <script>

        function DepartmentEditModel() {
            this.Id = 0;
            this.Name = "";

        }

        function createFormModel(data) {
            let model = new DepartmentEditModel();
            model.Id = data.Id;
            model.Name = data.Name;
            return model
        }

        function submitForm() {

            $("#form").validate();

            if (!$("#form").valid()) {
                return;
            }

            return $.ajax({
                type: "put",
                url: "https://localhost:44357/api/departments/" + $("#Id").val(),
                data: {Name : $("#Name").val()},
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},
                success: function (data) {
                    alert("Posted.");
                    window.location.href = "https://localhost:44335/departments/";
                },

                error: errorHandler




            });

        }

        function getFormData() {

            return $.ajax({
                type: "get",
                url: "https://localhost:44357/api/departments/" + $("#Id").val(),
                datatype: "json",
                traditional: "true",
                headers: {"Authorization": '@("Bearer " + authDetails.AccessToken)'},

                error: errorHandler




            });
        }

        async function populateForm() {
            let formRequest = await getFormData();

            let model = createFormModel(formRequest);
            
            $("#Id").val(model.Id);
            $("#Name").val(model.Name);

        }

        $(document).ready(function () {
            populateForm();
            $("#submit").click(submitForm);

        });


    </script>

}

@using Medium_Assignment.Models

@{AuthDetails authDetails = (AuthDetails)Context.Session["AuthDetails"];}



@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@section Scripts {

    <script>


        function getCookieValue(key) {
            let kvps = document.cookie.split(';');

            for (let i = 0; i < kvps.length; i++) {
                let k = kvps[i].split('=')[0];
                let v = kvps[i].split('=')[1];

                if (k == key) {
                    return v;
                }

            }


        }

        function errorHandler(jqXHR, status, err) {
            switch (jqXHR.status) {
                case 401:
                    //window.location.href = "https://localhost:44335/error/NotAuthorized";
                    break;
                case 404:
                    window.location.href = "https://localhost:44335/error/NotFound";
                    break;
                case 500:
                    window.location.href = "https://localhost:44335/error/InternalServerError";
                    break;
                default:
                    alert(jqXHR.responseJSON.Message);
                    break;
            }

        }

        function getFormData() {

            return $.ajax({
                type: "get",
                url: "https://localhost:44357/api/organizations/",
                datatype: "json",
                traditional: "true",
                headers: { "Authorization": "Bearer " + getCookieValue('token') },
                error: errorHandler
            });
        }

        $(document).ready(function () {
            //getFormData().done((data) => { console.log(data); });
            

        });
    </script>

}
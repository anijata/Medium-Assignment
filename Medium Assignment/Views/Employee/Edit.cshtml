@using Medium_Assignment.Models

@model EmployeeEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Employee</h2>

@using (@Html.BeginForm("Edit", "Employee", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.Employee.Id)

    @Html.HiddenFor(m => m.Employee.ApplicationUserId)

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.FirstName)
        @Html.TextBoxFor(m => m.Employee.FirstName, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.FirstName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.LastName)
        @Html.TextBoxFor(m => m.Employee.LastName, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.LastName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.UserName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber)
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.PhoneNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Email)
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Employee.DOB)
        @Html.TextBoxFor(m => m.Employee.DOB, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.DOB)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Gender)
        @Html.TextBoxFor(m => m.Employee.Gender, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.Gender)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Designation)
        @Html.TextBoxFor(m => m.Employee.Designation, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.Designation)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.DOJ)
        @Html.TextBoxFor(m => m.Employee.DOJ, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.DOJ)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Department)
        @Html.DropDownListFor(m => m.Employee.DepartmentId, Model.DepartmentsSelectList, "Select Department", new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.DepartmentId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Address1)
        @Html.TextBoxFor(m => m.Employee.Address1, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.Address1)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Address2)
        @Html.TextBoxFor(m => m.Employee.Address2, new { @class = "form-control text-danger" })
        @Html.ValidationMessageFor(m => m.Employee.Address2)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Country)
        @Html.DropDownListFor(m => m.Employee.CountryId, Model.CountriesSelectList, "Select Country", new { @class = "form-control text-danger", id = "Countries", })
        @Html.ValidationMessageFor(m => m.Employee.Country)

    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.State)
        @Html.DropDownListFor(m => m.Employee.StateId, Model.StatesSelectList, "Select State", new { @class = "form-control text-danger", id = "States" })
        @Html.ValidationMessageFor(m => m.Employee.State)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.City)
        @Html.DropDownListFor(m => m.Employee.CityId, Model.CitiesSelectList, "Select City", new { @class = "form-control text-danger", id = "Cities" })
        @Html.ValidationMessageFor(m => m.Employee.City)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.EmployeeType)
    </div>

    <div class="form-group">
        @Html.RadioButtonFor(m => m.Employee.EmployeeType, "Full Time") Full Time
        @Html.RadioButtonFor(m => m.Employee.EmployeeType, "Contract") Contract
    </div>

    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Employee.EmployeeType)

    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Status)
    </div>

    <div class="form-group">
        @Html.RadioButtonFor(m => m.Employee.Status, "Active") Active
        @Html.RadioButtonFor(m => m.Employee.Status, "Inactive") Inactive
    </div>

    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Employee.Status)

    </div>

    <button type="submit" class="btn btn-primary">
        Save
    </button>


}

@section Scripts {



    <script>
        $(document).ready(function () {
            $("#Countries").change(function () {
                $("#States").empty();
                $("#States").append("<option value=0> Select State </option>");
                $("#Cities").empty();
                $("#Cities").append("<option value=0> Select City </option>");


                if ($("#Countries").val() == 0) {

                    return;
                }

                $.ajax({
                    type: "post",
                    url: "/Organization/GetStates",
                    data: { countryId: $("#Countries").val() },
                    datatype: "json",
                    traditional: "true",
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            $("#States").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");

                        }
                    }


                });


            });



        });


    </script>

    <script>
        $(document).ready(function () {
            $("#States").change(function () {
                $("#Cities").empty();
                $("#Cities").append("<option value=0> Select City </option>");
                if ($("#States").val() == "0") {

                    return;
                }

                $.ajax({
                    type: "post",
                    url: "/Organization/GetCities",
                    data: { stateId: $("#States").val() },
                    datatype: "json",
                    traditional: "true",
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            $("#Cities").append("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");

                        }
                    }


                });


            });



        });


    </script>

}







